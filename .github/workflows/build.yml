name: Build

on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Get Frida v15.1.17
        run:
          git clone --recursive https://github.com/frida/frida.git
          cd frida
          git checkout 15.1.17
      - name: Use Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Build Frida (Linux)
        if: matrix.os == 'ubuntu-latest'
        env:
          npm_config_runtime: electron
          npm_config_target: 13.3.0
          npm_config_disturl: https://electronjs.org/headers
        run:
          cd frida/frida-node
          yarn global add add node-gyp
          yarn global add prebuild
          make node-linux-x86_64 NODE=$(which node)
      - name: Yarn
        env:
          npm_config_runtime: electron
          npm_config_target: 13.3.0
          npm_config_disturl: https://electronjs.org/headers
        run: |
          yarn global add electron-builder
          yarn
      - name: Build
        env:
          USE_HARD_LINKS: "false"
        run: |
          npm run electron:build
      - name: Cleanup artifacts macOS
        if: matrix.os == 'macOS-latest'
        run: |
          mkdir artifacts
          mv dist_electron/*.dmg artifacts || true
      - name: Cleanup artifacts ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir artifacts
          mv dist_electron/*.AppImage artifacts || true
      - name: Cleanup artifacts Windows
        if: matrix.os == 'windows-latest'
        run: |
          mkdir artifacts
          mv dist_electron/*.exe artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.os}}
          path: artifacts
